{
    "compilerOptions": {
        // compiled to meet the common js modules standard
        "module": "commonjs",
        // set target to es3, es6, etc.
        "target": "es6",
        // does not allow implicit any, like for variable 'anythingVar'
        "noImplicitAny": true,
        // sourceMap allows for debugging in browser
        "sourceMap": true,
        // this doesn't allow setting Nullable variables to null
        "strictNullChecks": true,
        // js file doesn't get created when there are typescript errors
        "noEmitOnError": false,
        // check all function params are used when declared in function
        "noUnusedParameters": true,
        // puts 'use strict' at top of each file
        // - First, strict mode eliminates some JavaScript silent errors by changing them to throw errors.
        // - Second, strict mode fixes mistakes that make it difficult for JavaScript engines to perform optimizations: strict mode code can sometimes be made to run faster than identical code that's not strict mode.
        // - Third, strict mode prohibits some syntax likely to be defined in future versions of ECMAScript.
        "alwaysStrict": true,
        "experimentalDecorators": true
    },
    // exlcude form compilation the downloaded modules
    "exclude": [
        "node_modules",
        // types
        "types.ts",
        "types-exercise.ts",
        "types-exercise-max.ts",
        // compilator options
        "compilator.ts",
        // es6
        "es6.ts",
        "es6-exercise-max.ts",
        // classes
        "classes.ts",
        "classes-exercise.ts",
        "classes-exercise-max.ts",
        // generics
        "generics.ts"
    ]
}
